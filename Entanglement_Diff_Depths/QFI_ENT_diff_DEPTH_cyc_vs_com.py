import numpy as np
import matplotlib.pyplot as plt



qfi_7n_com_6p_CYC_ENT_1D_rx = np.array([[ 9.83045425e+00,  2.92176579e+00,  1.19286873e+00, -2.84860733e+00, -9.95127640e-01,  4.84086693e+00],
                                     [ 2.92176579e+00,  1.27304603e+01,  2.21988014e+00, -1.01642494e+00, -3.33442764e+00, -3.77402790e+00],
                                     [ 1.19286873e+00,  2.21988014e+00,  1.12798645e+01,  1.06176376e-02, -4.93188515e-01, -2.59832150e+00],
                                     [-2.84860733e+00, -1.01642494e+00,  1.06176376e-02,  2.10037401e+01, 2.18358322e+00, -1.77412193e+00],
                                     [-9.95127640e-01, -3.33442764e+00, -4.93188515e-01,  2.18358322e+00, 2.39335140e+01,  1.02058783e+01],
                                     [ 4.84086693e+00, -3.77402790e+00, -2.59832150e+00, -1.77412193e+00, 1.02058783e+01,  3.91676276e+01]])

qfi_7n_com_6p_CYC_ENT_2D_rx = np.array([[ 9.6111869,   3.6770079,   1.37000999, -3.52989124, -1.33969379, 0.12890354],
                                     [ 3.6770079,  10.10664749,  3.35340492, -2.14456963, -1.9749633, -1.03091175],
                                     [ 1.37000999,  3.35340492, 10.41386337, -1.14849125, -0.76200409, -2.03023678],
                                     [-3.52989124, -2.14456963, -1.14849125, 21.07289314,  1.45446232, 0.26434589],
                                     [-1.33969379, -1.9749633,  -0.76200409,  1.45446232, 23.6513694, 3.45922855],
                                     [ 0.12890354, -1.03091175, -2.03023678,  0.26434589,  3.45922855, 22.36943768]])

qfi_7n_com_6p_CYC_ENT_3D_rx = np.array([[ 9.70586052,  3.70919731,  1.80605698, -3.44668365, -1.27165825, 0.17116482],
                                  [ 3.70919731, 10.38989265,  2.66184227, -1.88667355, -2.08819698, -1.0669643 ],
                                  [ 1.80605698,  2.66184227,  9.23348072, -0.86101788, -0.82938072, -0.94918324],
                                  [-3.44668365, -1.88667355, -0.86101788, 20.89206165,  2.39165543, 0.92069668],
                                  [-1.27165825, -2.08819698, -0.82938072,  2.39165543, 24.83804523, 4.10059536],
                                  [ 0.17116482, -1.0669643,  -0.94918324,  0.92069668,  4.10059536, 24.48951363]])

qfi_7n_com_6p_COM_ENT_1D_rx = np.array([[ 8.81250778,  2.57045734,  1.75093124, -4.3121793,   0.71173317, 5.54374069],
                                     [ 2.57045734, 13.27265984,  2.88769821, -1.46185627, -3.15095276, -3.22903263],
                                     [ 1.75093124,  2.88769821, 12.27729179, -0.9066386,  -0.85000561, -2.42189899],
                                     [-4.3121793,  -1.46185627, -0.9066386,  20.93696911,  3.52352448, -0.70428066],
                                     [ 0.71173317, -3.15095276, -0.85000561,  3.52352448, 23.18889957, 10.5986982 ],
                                     [ 5.54374069, -3.22903263, -2.42189899, -0.70428066, 10.5986982, 40.82885403]])


qfi_7n_com_6p_COM_ENT_2D_rx = np.array( [[ 9.71783432,  3.90292778,  1.47387291, -5.14240482,  0.35736633, 0.42488663],
                                      [ 3.90292778, 10.82693348,  4.19485504, -2.68416935, -2.90815968, 0.53677307],
                                      [ 1.47387291,  4.19485504, 10.26834324, -0.94969433, -0.97105816, -1.08979252],
                                      [-5.14240482, -2.68416935, -0.94969433, 20.94539932,  3.87876591, 1.32961662],
                                      [ 0.35736633, -2.90815968, -0.97105816,  3.87876591, 23.25195431, 3.63680977],
                                      [ 0.42488663,  0.53677307, -1.08979252,  1.32961662,  3.63680977, 22.86699181]])

qfi_7n_com_6p_COM_ENT_3D_rx = np.array([[ 9.42905373,  3.83360325,  1.68538971, -3.96868122,  0.70774448, 0.69032074],
                              [ 3.83360325, 10.61471214,  2.8587627,  -2.16253597, -2.65613155, 0.86404675],
                              [ 1.68538971,  2.8587627,   9.19088017, -0.74257271, -0.89784435, -1.52905956],
                              [-3.96868122, -2.16253597, -0.74257271, 21.03408764,  3.84862259, 1.515835],
                              [ 0.70774448, -2.65613155, -0.89784435,  3.84862259, 23.36684536, 3.2248798],
                              [ 0.69032074,  0.86404675, -1.52905956,  1.515835,    3.2248798, 23.22327835]])

titles_rx = ['QFI CYC-ENT 1 E-S', 'QFI COM-ENT 1 E-S', 'QFI CYC-ENT 2 E-S', 'QFI COM-ENT 2 E-S', 'QFI CYC-ENT 3 E-S', 'QFI COM-ENT 3 E-S']

qfi_7n_com_9p_CYC_ENT_1D_rxry = np.array([[ 1.60625261e+01, -2.56079102e-02, -5.07400131e-02,  1.11283264e-01, -3.25912857e-02,  5.30820885e-01, -6.18121227e+00,  1.13519755e+01, 6.77514256e+00],
                                          [-2.56079102e-02,  1.09480631e+01, -1.53587532e-01,  3.10743561e-01, 4.84910202e-02, -6.91672173e-01, -2.51772995e-01,  2.39994431e-02, -3.43851051e-01],
                                          [-5.07400131e-02, -1.53587532e-01,  1.41509022e+01, -6.76898575e-02, -1.45743523e-01, -7.11872101e-03,  2.74092178e-01,  8.41608391e-01, 1.86270943e-01],
                                          [ 1.11283264e-01,  3.10743561e-01, -6.76898575e-02,  7.24189419e+00, 4.08049965e-01,  4.25015945e-01,  2.15589294e-01,  2.42874031e-01, -1.00138512e-01],
                                          [-3.25912857e-02,  4.84910202e-02, -1.45743523e-01,  4.08049965e-01, 1.02807412e+01, -4.42229233e-01, -9.52446747e-02, -1.77402653e+00, -6.39108047e-01],
                                          [ 5.30820885e-01, -6.91672173e-01, -7.11872101e-03,  4.25015945e-01, -4.42229233e-01,  1.16373958e+01, -4.02466507e-01,  1.47641296e+00, 1.25187382e+00],
                                          [-6.18121227e+00, -2.51772995e-01,  2.74092178e-01,  2.15589294e-01, -9.52446747e-02, -4.02466507e-01,  2.10363545e+01, -5.25699650e+00, -3.23186375e+00],
                                          [ 1.13519755e+01,  2.39994431e-02,  8.41608391e-01,  2.42874031e-01, -1.77402653e+00,  1.47641296e+00, -5.25699650e+00,  6.59627842e+01, 7.68870384e+00],
                                          [ 6.77514256e+00, -3.43851051e-01,  1.86270943e-01, -1.00138512e-01, -6.39108047e-01,  1.25187382e+00, -3.23186375e+00,  7.68870384e+00, 5.48348627e+01]])

qfi_7n_com_9p_CYC_ENT_2D_rxry = np.array([[ 1.56125152e+01, -2.53221550e-01,  1.39017105e-02,  3.71969986e-02, -1.88794556e-01,  5.59826660e-02, -6.37858719e+00,  1.14354733e+01, 1.94568169e+00],
                                          [-2.53221550e-01,  1.10783633e+01,  1.61342049e-01, -3.82334518e-02, -2.11094284e-02, -2.32652588e-01,  3.37493172e-01, -8.73465691e-01, 2.21020458e+00],
                                          [ 1.39017105e-02,  1.61342049e-01,  8.30421310e+00,  1.13019104e-01, 5.15554047e-02, -2.18186455e-01, -3.04505920e-02, -5.29400253e-02, 1.71284256e-01],
                                          [ 3.71969986e-02, -3.82334518e-02,  1.13019104e-01,  7.46986931e+00, -1.12230759e-01,  6.59117889e-02, -1.48210258e-01, -1.94584618e-01, -4.68610382e-02],
                                          [-1.88794556e-01, -2.11094284e-02,  5.15554047e-02, -1.12230759e-01, 7.45142170e+00,  1.37580299e-01,  5.44669342e-02, -3.88185349e-01, -1.16438560e-01],
                                          [ 5.59826660e-02, -2.32652588e-01, -2.18186455e-01,  6.59117889e-02, 1.37580299e-01,  8.56425331e+00, -9.60905075e-02,  5.66100540e-01, -2.17706528e-01],
                                          [-6.37858719e+00,  3.37493172e-01, -3.04505920e-02, -1.48210258e-01, 5.44669342e-02, -9.60905075e-02,  2.08345190e+01, -7.04471634e+00, -1.27948635e+00],
                                          [ 1.14354733e+01, -8.73465691e-01, -5.29400253e-02, -1.94584618e-01, -3.88185349e-01,  5.66100540e-01, -7.04471634e+00,  6.55926097e+01, 2.43677559e+00],
                                          [ 1.94568169e+00,  2.21020458e+00,  1.71284256e-01, -4.68610382e-02, -1.16438560e-01, -2.17706528e-01, -1.27948635e+00,  2.43677559e+00, 3.88924479e+01]])

qfi_7n_com_9p_CYC_ENT_3D_rxry = np.array([[ 1.70234671e+01,  2.01597977e-02, -1.31548271e-01, -7.92358017e-02, -1.09294128e-02,  9.57008362e-03, -6.29577808e+00,  1.19894876e+01, 2.67626476e+00],
                                  [ 2.01597977e-02,  1.01537922e+01, -2.06150055e-02, -6.00872040e-03, -2.03044128e-02, -3.43091965e-02,  1.40537643e-01, -8.75427551e-01, 1.87097736e+00],
                                  [-1.31548271e-01, -2.06150055e-02,  8.10907608e+00, -8.16449738e-02, 6.69148636e-02, -6.60194397e-03,  2.73462601e-01, -1.40891380e-01, 1.53601074e-02],
                                  [-7.92358017e-02, -6.00872040e-03, -8.16449738e-02,  7.54067188e+00, -9.58454132e-03,  2.52363968e-02,  2.27729607e-01, -2.10201836e-01, 1.80512619e-02],
                                  [-1.09294128e-02, -2.03044128e-02,  6.69148636e-02, -9.58454132e-03, 7.30344379e+00, -9.09798431e-02,  5.54767609e-02, -9.25172043e-02, -1.85341835e-01],
                                  [ 9.57008362e-03, -3.43091965e-02, -6.60194397e-03,  2.52363968e-02, -9.09798431e-02,  7.09344990e+00,  2.19923782e-02,  1.73066750e-01, -3.96496887e-01],
                                  [-6.29577808e+00,  1.40537643e-01,  2.73462601e-01,  2.27729607e-01, 5.54767609e-02,  2.19923782e-02,  2.08964480e+01, -6.57441017e+00, -6.91212082e-01],
                                  [ 1.19894876e+01, -8.75427551e-01, -1.40891380e-01, -2.10201836e-01, -9.25172043e-02,  1.73066750e-01, -6.57441017e+00,  6.60317496e+01, 1.88256107e+00],
                                  [ 2.67626476e+00,  1.87097736e+00,  1.53601074e-02,  1.80512619e-02, -1.85341835e-01, -3.96496887e-01, -6.91212082e-01,  1.88256107e+00, 3.87700134e+01]])

qfi_7n_com_9p_COM_ENT_1D_rxry = np.array([[ 1.69589645e+01, -2.53220825e-01,  1.24373512e-01, -1.01874962e-01, -5.02245483e-01, -1.30672455e+00, -6.50539650e+00,  1.34500983e+01, 7.67562080e+00],
                                          [-2.53220825e-01,  1.08677028e+01,  1.17643661e-01, -6.43948975e-01, -8.96826935e-02, -1.59104767e-01, -9.72615814e-02, -1.30688019e-01, 1.72303009e-01],
                                          [ 1.24373512e-01,  1.17643661e-01,  1.35829038e+01,  2.65177383e-01, 1.80569000e-01,  2.88749352e-01,  3.91286049e-01,  1.60280380e-01, -1.86222000e-01],
                                          [-1.01874962e-01, -6.43948975e-01,  2.65177383e-01,  7.55737629e+00, 2.91391754e-02,  6.69415665e-02,  3.50745010e-01, -6.43621902e-01, 1.02647053e+00],
                                          [-5.02245483e-01, -8.96826935e-02,  1.80569000e-01,  2.91391754e-02, 1.00400505e+01,  1.30728149e-01,  6.74571190e-01, -5.95727234e-01, -1.19215157e+00],
                                          [-1.30672455e+00, -1.59104767e-01,  2.88749352e-01,  6.69415665e-02, 1.30728149e-01,  1.19408279e+01,  7.17855797e-01, -9.18645325e-01, -9.21584740e-01],
                                          [-6.50539650e+00, -9.72615814e-02,  3.91286049e-01,  3.50745010e-01, 6.74571190e-01,  7.17855797e-01,  2.10206395e+01, -6.61989861e+00, -3.08688778e+00],
                                          [ 1.34500983e+01, -1.30688019e-01,  1.60280380e-01, -6.43621902e-01, -5.95727234e-01, -9.18645325e-01, -6.61989861e+00,  5.74655217e+01, 5.57324371e+00],
                                          [ 7.67562080e+00,  1.72303009e-01, -1.86222000e-01,  1.02647053e+00, -1.19215157e+00, -9.21584740e-01, -3.08688778e+00,  5.57324371e+00, 5.21554486e+01]])

qfi_7n_com_9p_COM_ENT_2D_rxry = np.array([[ 1.64682210e+01,  8.31866837e-01, -3.30279541e-02, -1.53312302e-02, 1.77290077e-01, -1.70815239e-01, -7.36337677e+00,  1.39959081e+01, 2.61489388e+00],
                                          [ 8.31866837e-01,  1.15900683e+01, -1.91885376e-01, -2.04714890e-01, -7.97653198e-03,  2.18790016e-01, -5.80240364e-01, -1.33563858e+00, 6.67481453e+00],
                                          [-3.30279541e-02, -1.91885376e-01,  8.88170578e+00,  6.11106873e-03, 1.76334915e-01, -1.63251991e-01, -2.97396774e-01, -5.32440567e-02, -3.26229477e-02],
                                          [-1.53312302e-02, -2.04714890e-01,  6.11106873e-03,  7.24972034e+00, -6.85915756e-02,  6.24675751e-02,  7.29798508e-02, -1.47334709e-01, -4.22484283e-01],
                                          [ 1.77290077e-01, -7.97653198e-03,  1.76334915e-01, -6.85915756e-02, 8.02359978e+00, -2.32287674e-01, -3.50489044e-02,  3.92193184e-01, -5.84537010e-01],
                                          [-1.70815239e-01,  2.18790016e-01, -1.63251991e-01,  6.24675751e-02, -2.32287674e-01,  9.22346249e+00, -8.20848465e-02, -1.09105759e-01, -1.77345238e-01],
                                          [-7.36337677e+00, -5.80240364e-01, -2.97396774e-01,  7.29798508e-02, -3.50489044e-02, -8.20848465e-02,  2.09597464e+01, -5.81560856e+00, -1.64751625e+00],
                                          [ 1.39959081e+01, -1.33563858e+00, -5.32440567e-02, -1.47334709e-01, 3.92193184e-01, -1.09105759e-01, -5.81560856e+00,  6.49058585e+01, 3.65480518e+00],
                                          [ 2.61489388e+00,  6.67481453e+00, -3.26229477e-02, -4.22484283e-01, -5.84537010e-01, -1.77345238e-01, -1.64751625e+00,  3.65480518e+00, 4.19804160e+01]])

qfi_7n_com_9p_COM_ENT_3D_rxry = np.array([[1.90646869e+01, -7.79838257e-01, -2.37170067e-01, -2.41487846e-01,  7.11612701e-02,  2.03210068e-02, -6.97088634e+00,  1.72476240e+01, 3.00817463e+00],
                                     [-7.79838257e-01,  1.08205490e+01, -8.31989288e-03, -3.18125534e-01,  -1.02307510e-02,  1.40305939e-01,  2.09728622e-02,  6.07592392e-02, 5.77149651e+00],
                                     [-2.37170067e-01, -8.31989288e-03,  9.50536560e+00, -1.34948692e-01,  2.62971115e-02, -1.21160660e-01,  2.82105637e-01, -1.04813766e+00, -4.27445869e-01],
                                     [-2.41487846e-01, -3.18125534e-01, -1.34948692e-01,  7.56736446e+00,  2.49254608e-02, -8.64850998e-02,  5.36349869e-01,  8.14741135e-02, -5.21873741e-01],
                                     [ 7.11612701e-02, -1.02307510e-02,  2.62971115e-02,  2.49254608e-02,  8.27198185e+00, -1.16442528e-01,  9.97914124e-02,  2.32399406e-01, 1.42164154e-01],
                                     [ 2.03210068e-02,  1.40305939e-01, -1.21160660e-01, -8.64850998e-02,  -1.16442528e-01,  7.36787582e+00, -6.79119492e-02,  1.42154388e-01, 1.03389587e-01],
                                     [-6.97088634e+00,  2.09728622e-02,  2.82105637e-01,  5.36349869e-01,  9.97914124e-02, -6.79119492e-02,  2.10993729e+01, -7.78698280e+00, -1.53604385e+00],
                                     [ 1.72476240e+01,  6.07592392e-02, -1.04813766e+00,  8.14741135e-02,  2.32399406e-01,  1.42154388e-01, -7.78698280e+00,  6.58518772e+01, 6.80752892e+00],
                                     [ 3.00817463e+00,  5.77149651e+00, -4.27445869e-01, -5.21873741e-01,  1.42164154e-01,  1.03389587e-01, -1.53604385e+00,  6.80752892e+00, 4.08948115e+01]])

titles_rxry = ['QFI CYC-ENT 1 E-S', 'QFI COM-ENT 1 E-S', 'QFI CYC-ENT 2 E-S', 'QFI COM-ENT 2 E-S', 'QFI CYC-ENT 3 E-S', 'QFI COM-ENT 3 E-S']


# === MATRICES QFI (rx) ===
qfi_rx = [
    qfi_7n_com_6p_CYC_ENT_1D_rx,
    qfi_7n_com_6p_COM_ENT_1D_rx,
    qfi_7n_com_6p_CYC_ENT_2D_rx,
    qfi_7n_com_6p_COM_ENT_2D_rx,
    qfi_7n_com_6p_CYC_ENT_3D_rx,
    qfi_7n_com_6p_COM_ENT_3D_rx
]
titles_rx = ['QFI CYC-ENT 1 E-S', 'QFI COM-ENT 1 E-S',
             'QFI CYC-ENT 2 E-S', 'QFI COM-ENT 2 E-S',
             'QFI CYC-ENT 3 E-S', 'QFI COM-ENT 3 E-S']

# === MATRICES QFI (rxry) ===
qfi_rxry = [
    qfi_7n_com_9p_CYC_ENT_1D_rxry,
    qfi_7n_com_9p_COM_ENT_1D_rxry,
    qfi_7n_com_9p_CYC_ENT_2D_rxry,
    qfi_7n_com_9p_COM_ENT_2D_rxry,
    qfi_7n_com_9p_CYC_ENT_3D_rxry,
    qfi_7n_com_9p_COM_ENT_3D_rxry
]
titles_rxry = ['QFI CYC-ENT 1 E-S', 'QFI COM-ENT 1 E-S',
               'QFI CYC-ENT 2 E-S', 'QFI COM-ENT 2 E-S',
               'QFI CYC-ENT 3 E-S', 'QFI COM-ENT 3 E-S']

# Número de qubits
N = 7
lin_scale = 4 * N        # 4*N
heisenberg = 4 * (N**2)  # 4*N^2

def min_max_eigvals(matrix_list):
    """
    Dada una lista de matrices, calcula el
    eigenvalor mínimo y el máximo de cada una.
    Retorna dos listas de la misma longitud que matrix_list.
    """
    mins = []
    maxs = []
    for mat in matrix_list:
        w = np.linalg.eigvalsh(mat)  # Para matrices simétricas/hermíticas
        mins.append(w[0])           # menor eigenvalor
        maxs.append(w[-1])          # mayor eigenvalor
    return mins, maxs

# Calculamos min/max para los dos casos
rx_mins, rx_maxs = min_max_eigvals(qfi_rx)
rxry_mins, rxry_maxs = min_max_eigvals(qfi_rxry)

# Índice en el eje X para cada uno de los 6 casos
x_rx = np.arange(len(qfi_rx))     # [0, 1, 2, 3, 4, 5]
x_rxry = np.arange(len(qfi_rxry)) # [0, 1, 2, 3, 4, 5]

# Creamos una figura con dos subplots (1 fila, 2 columnas)
fig, axs = plt.subplots(1, 2, figsize=(12,5))

# === SUBGRÁFICA 1: Operadores "rx" ===
axs[0].plot(x_rx, rx_mins, 'o--', label='Min eigenvalue')
axs[0].plot(x_rx, rx_maxs, 'o-',  label='Max eigenvalue')
axs[0].axhline(lin_scale, color='red', linestyle=':',  label=f'4*N = {lin_scale}')
axs[0].axhline(heisenberg, color='green', linestyle='--', label=f'4*N^2 = {heisenberg}')
axs[0].set_xticks(x_rx)
axs[0].set_xticklabels(titles_rx, rotation=45, ha='right')
axs[0].set_title('RX-only operators')
axs[0].set_ylabel('Eigenvalue')
axs[0].grid(True)
axs[0].legend(loc='best')

# === SUBGRÁFICA 2: Operadores "rxry" ===
axs[1].plot(x_rxry, rxry_mins, 'o--', label='Min eigenvalue')
axs[1].plot(x_rxry, rxry_maxs, 'o-',  label='Max eigenvalue')
axs[1].axhline(lin_scale, color='red', linestyle=':',  label=f'4*N = {lin_scale}')
axs[1].axhline(heisenberg, color='green', linestyle='--', label=f'4*N^2 = {heisenberg}')
axs[1].set_xticks(x_rxry)
axs[1].set_xticklabels(titles_rxry, rotation=45, ha='right')
axs[1].set_title('RXRY operators')
axs[1].set_ylabel('Eigenvalue')
axs[1].grid(True)
axs[1].legend(loc='best')

plt.tight_layout()
plt.show()
