import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

qfi_10n_cyc_3p_non = np.array([[9.12097729e+00, -4.06448364e-02, -5.54461670e-02],
  [-4.06448364e-02,  1.07419973e+01, -5.88150024e-04],
  [-5.54461670e-02, -5.88150024e-04,  1.00567029e+01]])

qfi_10n_cyc_3p_ent = np.array([[8.61967812,  0.02356899,  0.0445071],
  [ 0.02356899, 19.34078453, -0.32171543],
  [ 0.0445071,  -0.32171543, 10.01627102]])

qfi_10n_cyc_6p_non = np.array([[ 8.63120262,  0.10493565, -0.06424969, -0.89309368, -0.04664635, 2.04580544],
  [ 0.10493565, 11.52350155, -0.08907719,  0.24582668, -0.27524929, -0.11830482],
  [-0.06424969, -0.08907719, 11.52066025, -0.24249222,  0.02544998, -0.01748711],
  [-0.89309368,  0.24582668, -0.24249222, 10.68854618,  0.06877239, -0.36276291],
  [-0.04664635, -0.27524929,  0.02544998,  0.06877239,  9.91088287, 1.91154285],
  [ 2.04580544, -0.11830482, -0.01748711, -0.36276291,  1.91154285, 10.39792187]])

qfi_10n_cyc_6p_ent = np.array([[ 8.04628616e+00, -5.01790810e-01,  1.12668800e-01, -9.37888718e-02, 2.06016541e-03,  2.67510799e+00],
  [-5.01790810e-01,  1.21769067e+01,  1.14396015e+00, -1.87852859e-02, 9.70606155e-01, -2.19623184e-02],
  [ 1.12668800e-01,  1.14396015e+00,  1.79723180e+01, -3.52213287e-02, 1.82436638e-01,  4.35255432e-01],
  [-9.37888718e-02, -1.87852859e-02, -3.52213287e-02,  1.11476788e+01, 2.95634842e-02, -1.70344086e-01],
  [ 2.06016541e-03,  9.70606155e-01,  1.82436638e-01,  2.95634842e-02, 9.98961506e+00,  1.36916351e-02],
  [ 2.67510799e+00, -2.19623184e-02,  4.35255432e-01, -1.70344086e-01, 1.36916351e-02,  1.20648208e+01]])

qfi_10n_cyc_9p_non = np.array([[ 8.34680046e+00, -6.53648224e-01, -7.59933472e-03, -5.68252945e-02, 5.90261078e-02,  2.67887115e-02,  3.55558395e-02,  2.20447723e+00, 
  1.52357372e+00],
  [-6.53648224e-01,  1.18304443e+01, -1.01438065e+00,  7.48426437e-02, 2.51122169e-01, -8.90925179e-01,  9.87161255e-02, -2.77789917e-01, 
  -1.91310730e-01],
  [-7.59933472e-03, -1.01438065e+00,  1.15919366e+01,  7.69457664e-01, -4.08031578e-01, -3.16847153e-01, -2.57058983e-01,  4.92478943e-01,
   -6.09198380e-02],
  [-5.68252945e-02,  7.48426437e-02,  7.69457664e-01,  1.09332470e+01, -1.55547371e-01, -4.18913727e-01, -3.40713501e-02,  1.65277023e-01,
    5.13071938e-01],
  [ 5.90261078e-02,  2.51122169e-01, -4.08031578e-01, -1.55547371e-01, 1.02233728e+01, -3.81004715e-02,  8.23922348e-02, -6.97216072e-01,
    1.39821701e-01],
  [ 2.67887115e-02, -8.90925179e-01, -3.16847153e-01, -4.18913727e-01, -3.81004715e-02,  1.16949475e+01, -2.57311020e-01, -3.23044395e-01,
    3.40377502e-01],
  [ 3.55558395e-02,  9.87161255e-02, -2.57058983e-01, -3.40713501e-02, 8.23922348e-02, -2.57311020e-01,  9.98377548e+00,  1.33815170e+00,
    8.24476814e-01],
  [ 2.20447723e+00, -2.77789917e-01,  4.92478943e-01,  1.65277023e-01, -6.97216072e-01, -3.23044395e-01,  1.33815170e+00,  1.06253687e+01,
    2.12328445e+00],
  [ 1.52357372e+00, -1.91310730e-01, -6.09198380e-02,  5.13071938e-01, 1.39821701e-01,  3.40377502e-01,  8.24476814e-01,  2.12328445e+00,
    1.24468769e+01]])

qfi_10n_cyc_9p_ent = np.array([[ 8.72788231e+00,  6.94670486e-01, -2.21787376e-01,  1.31757660e-01,  -3.10203171e-02,  1.38520889e-01,  8.53008652e-02,  3.14180107e+00,
    3.68832207e-01],
  [ 6.94670486e-01,  1.25151380e+01,  1.90025558e-01, -1.46830368e-01,  -7.87586975e-02,  1.03765450e-01, -4.53811302e-01,  5.94305344e-01,
    5.97344074e+00],
  [-2.21787376e-01,  1.90025558e-01,  1.17133029e+01, -5.89429359e-01,  -1.37247047e-01,  1.09479256e-01,  5.23180923e-01,  7.45553780e-01,
    3.09916191e-01],
  [ 1.31757660e-01, -1.46830368e-01, -5.89429359e-01,  1.85260067e+01,  1.40036011e-02, -6.59442139e-02, -2.02825966e-01, -3.51157303e-01,
    9.57335663e-02],
  [-3.10203171e-02, -7.87586975e-02, -1.37247047e-01,  1.40036011e-02,  1.12279359e+01, -1.00869408e-01, -6.25317001e-02, -7.05774307e-02,
    2.48641968e-02],
  [ 1.38520889e-01,  1.03765450e-01,  1.09479256e-01, -6.59442139e-02,  -1.00869408e-01,  1.14859111e+01, -2.48855209e-02,  8.80481339e-02,
   -3.78268814e-02],
  [ 8.53008652e-02, -4.53811302e-01,  5.23180923e-01, -2.02825966e-01,  -6.25317001e-02, -2.48855209e-02,  9.95722420e+00,  2.30633850e-01,
   -4.85023232e-01],
  [ 3.14180107e+00,  5.94305344e-01,  7.45553780e-01, -3.51157303e-01,  -7.05774307e-02,  8.80481339e-02,  2.30633850e-01,  1.29264370e+01,
    1.24343128e+00],
  [ 3.68832207e-01,  5.97344074e+00,  3.09916191e-01,  9.57335663e-02,  2.48641968e-02, -3.78268814e-02, -4.85023232e-01,  1.24343128e+00,
    1.27432678e+01]])

# Create a list of matrices and their titles
qfi_matrices = [qfi_10n_cyc_3p_non, qfi_10n_cyc_3p_ent, qfi_10n_cyc_6p_non, qfi_10n_cyc_6p_ent, qfi_10n_cyc_9p_non, qfi_10n_cyc_9p_ent]
titles = ['QFI 3p Non', 'QFI 3p Ent', 'QFI 6p Non', 'QFI 6p Ent', 'QFI 9p Non', 'QFI 9p Ent']

# Set up the figure and axes
fig, axes = plt.subplots(3, 2, figsize=(13, 10))

# Use a single color bar for all subplots
vmin = min([matrix.min() for matrix in qfi_matrices])
vmax = max([matrix.max() for matrix in qfi_matrices])

# Plot each matrix as a heatmap
for i, ax in enumerate(axes.flat):
    sns.heatmap(qfi_matrices[i], ax=ax, annot=True, cmap='crest', linewidth=0.5, vmin=vmin, vmax=vmax, cbar=i == 0,
                cbar_ax=None if i else fig.add_axes([.91, .3, .03, .4]))
    ax.set_title(titles[i])

# Adjust layout
plt.tight_layout(rect=[0, 0, .9, 1])
plt.show()

##plt.imshow(qfi_4n_cyc_6p_ent)
##data = np.array(qfi_4n_cyc_6p_ent, dtype='float16')
##for i in range(len(qfi_4n_cyc_6p_ent)):
##  for j in range(len(qfi_4n_cyc_6p_ent)):
##      plt.annotate(str(data[i][j]), xy=(j, i), ha='center', va='center', color='white')
##plt.colorbar()

#plt.show()
