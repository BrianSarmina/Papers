import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

qfi_7n_cyc_3p_non = np.array([[ 6.22144463e+00,  4.68902588e-02,  1.43634796e-03],
  [ 4.68902588e-02,  7.30213520e+00, -5.33466339e-03],
  [ 1.43634796e-03, -5.33466339e-03,  6.99400806e+00]])

qfi_7n_cyc_3p_ent = np.array([[ 5.9667395, 0.02623341, -0.02956547],
  [ 0.02623341, 11.76406609, -0.25032291],
  [-0.02956547, -0.25032291,  6.99128323]])

qfi_7n_cyc_6p_non = np.array([[ 5.91713757,  0.27171097, -0.01976887,  0.28780975, -0.04055847,
    2.09920887],
  [ 0.27171097,  8.29855865, -0.23787563, -0.06636589,  0.1289048,
    0.17159203],
  [-0.01976887, -0.23787563,  8.27528709,  0.26567032, -0.03104187,
   -0.02858273],
  [ 0.28780975, -0.06636589,  0.26567032,  7.15710575, -0.18408302,
   -0.05308903],
  [-0.04055847,  0.1289048,  -0.03104187, -0.18408302,  6.93433456,
    1.07667278],
  [ 2.09920887,  0.17159203, -0.02858273, -0.05308903,  1.07667278,
    7.61150745]])

qfi_7n_cyc_6p_ent = np.array([[ 5.71608055,  0.0370662,  0.02744133,  0.04382603, -0.01295311,
    2.11360294],
  [ 0.03706627,  8.26294064, -0.05994015, -0.18731403, -0.30653099,
   -0.143545  ],
  [ 0.02744133, -0.05994015,  9.95048832, -0.02297832, -0.53238647,
    0.23935432],
  [ 0.04382603, -0.18731403, -0.02297832,  7.674221,   -0.04835262,
    0.20729824],
  [-0.01295311, -0.30653099, -0.53238647, -0.04835262,  6.96408592,
    0.28418243],
  [ 2.11360294, -0.143545,    0.23935432,  0.20729824,  0.28418243,
    8.33384026]])

qfi_7n_cyc_9p_non = np.array([[5.89555359e+00, -9.38864136e-02,  2.74129219e-01, -5.77305984e-02,  -5.98220825e-03, -7.34175491e-02,  2.35515594e-02,  1.57173191e+00,
    5.42837715e-01],
  [-9.38864136e-02,  8.10621025e+00, -3.50699730e-01, -1.02499390e-02,  7.56990814e-02, -3.04031181e-01,  5.81714630e-03,  1.50887909e-01,
   -8.84418488e-03],
  [ 2.74129219e-01, -3.50699730e-01,  8.48429832e+00, -3.31048927e-01,  -4.78465919e-01,  3.97695313e-01, -1.39575768e-01,  3.58813438e-01,
   -3.41632843e-02],
  [-5.77305984e-02, -1.02499390e-02, -3.31048927e-01,  7.82507870e+00,  6.62462234e-01,  2.31185532e-01,  4.77196884e-02,  4.93056107e-02,
   -9.25658035e-02],
  [-5.98220825e-03,  7.56990814e-02, -4.78465919e-01,  6.62462234e-01,  7.83166168e+00, -5.65964203e-01, -5.96344376e-02,  9.41834641e-02,
    3.69881020e-01],
  [-7.34175491e-02, -3.04031181e-01,  3.97695313e-01,  2.31185532e-01,  -5.65964203e-01,  8.03783966e+00,  8.82223129e-02, -2.20965347e-01,
   -2.35199547e-01],
  [ 2.35515594e-02,  5.81714630e-03, -1.39575768e-01,  4.77196884e-02,  -5.96344376e-02,  8.82223129e-02,  6.99659592e+00,  7.79055443e-01,
    3.12038765e-01],
  [ 1.57173191e+00,  1.50887909e-01,  3.58813438e-01,  4.93056107e-02,  9.41834641e-02, -2.20965347e-01,  7.79055443e-01,  7.39037815e+00,
    7.39791679e-01],
  [ 5.42837715e-01, -8.84418488e-03, -3.41632843e-02, -9.25658035e-02,  3.69881020e-01, -2.35199547e-01,  3.12038765e-01,  7.39791679e-01,
    8.03109501e+00]])

qfi_7n_cyc_9p_ent = np.array([[6.33026489, -0.12694027,  0.15966728, -0.08890995,  0.18365658,  -0.12533787,  0.0166478,   2.41473671,  0.26389034],
  [-0.12694027,  7.99340645,  0.01304062, -0.11730377,  0.10192394,  0.12953125, -0.04376427,  0.10912014,  3.69550499],
  [ 0.15966728,  0.01304062,  7.77603729, -0.10861378,  0.23701084,  -0.15582138,  0.09519341, -0.286791,   -0.01263924],
  [-0.08890995, -0.11730377, -0.10861378, 11.18613583,  0.20118538,  0.03104397,  0.26186512,  0.09021233, -0.18523243],
  [ 0.18365658,  0.10192394,  0.23701084,  0.20118538,  8.38431404,  0.05012871, -0.1542841,   0.04511917, -0.16834106],
  [-0.12533787,  0.12953125, -0.15582138,  0.03104397,  0.05012871,  7.31296448,  0.13388508, -0.06275475,  0.06815079],
  [ 0.0166478,  -0.04376427,  0.09519341,  0.26186512, -0.1542841,  0.13388508,  7.02782619, -0.24823376, -0.11345066],
  [ 2.41473671,  0.10912014, -0.286791,    0.09021233,  0.04511917,  -0.06275475, -0.24823376,  8.84862488,  0.66143021],
  [ 0.26389034,  3.69550499, -0.01263924, -0.18523243, -0.16834106,  0.06815079, -0.11345066,  0.66143021,  8.03479729]])

# Create a list of matrices and their titles
qfi_matrices = [qfi_7n_cyc_3p_non, qfi_7n_cyc_3p_ent, qfi_7n_cyc_6p_non, qfi_7n_cyc_6p_ent, qfi_7n_cyc_9p_non, qfi_7n_cyc_9p_ent]
titles = ['QFI 3p Non', 'QFI 3p Ent', 'QFI 6p Non', 'QFI 6p Ent', 'QFI 9p Non', 'QFI 9p Ent']

# Set up the figure and axes
fig, axes = plt.subplots(3, 2, figsize=(13, 10))

# Use a single color bar for all subplots
vmin = min([matrix.min() for matrix in qfi_matrices])
vmax = max([matrix.max() for matrix in qfi_matrices])

# Plot each matrix as a heatmap
for i, ax in enumerate(axes.flat):
    sns.heatmap(qfi_matrices[i], ax=ax, annot=True, cmap='crest', linewidth=0.5, vmin=vmin, vmax=vmax, cbar=i == 0,
                cbar_ax=None if i else fig.add_axes([.91, .3, .03, .4]))
    ax.set_title(titles[i])

# Adjust layout
plt.tight_layout(rect=[0, 0, .9, 1])
plt.show()

##plt.imshow(qfi_4n_cyc_6p_ent)
##data = np.array(qfi_4n_cyc_6p_ent, dtype='float16')
##for i in range(len(qfi_4n_cyc_6p_ent)):
##  for j in range(len(qfi_4n_cyc_6p_ent)):
##      plt.annotate(str(data[i][j]), xy=(j, i), ha='center', va='center', color='white')
##plt.colorbar()

#plt.show()
