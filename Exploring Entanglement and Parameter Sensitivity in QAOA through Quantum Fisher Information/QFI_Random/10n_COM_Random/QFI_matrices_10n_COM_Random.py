import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

qfi_10n_com_3p_non = np.array([[ 4.80165491e+01,  4.38316727e-02,  4.46362495e-01],
  [ 4.38316727e-02,  2.50548351e+01, -1.24791107e-01],
  [ 4.46362495e-01, -1.24791107e-01,  4.47932544e+01]])

qfi_10n_com_3p_ent = np.array([[ 4.65621180e+01,  1.47016907e-02,  2.57642708e+00],
  [ 1.47016907e-02,  1.06592764e+01, -1.50859680e-01],
  [ 2.57642708e+00, -1.50859680e-01,  4.49488808e+01]])

qfi_10n_com_6p_non = np.array([[ 4.75245885e+01, -7.12779312e-01,  3.52480316e-02,  1.70453007e+00, -1.60221519e+00,  1.72399483e-01],
  [-7.12779312e-01,  3.37377237e+01,  9.36218987e-01, -6.03874588e-02, -3.63555107e-01,  3.50524548e+00],
  [ 3.52480316e-02,  9.36218987e-01,  2.63415219e+01, -1.19487602e+00, -2.44358063e-02,  2.28404129e+00],
  [ 1.70453007e+00, -6.03874588e-02, -1.19487602e+00,  3.33538800e+01, 1.19020798e+00, -4.37209835e+00],
  [-1.60221519e+00, -3.63555107e-01, -2.44358063e-02,  1.19020798e+00, 4.49615887e+01, -1.09569658e+01],
  [ 1.72399483e-01,  3.50524548e+00,  2.28404129e+00, -4.37209835e+00, -1.09569658e+01,  2.63434227e+02]])

qfi_10n_com_6p_ent = np.array([[ 4.76124286e+01,  6.19333038e-01,  1.61392593e-02,  1.27839279e-01, -1.52301311e+00,  6.14675068e+01],
  [ 6.19333038e-01,  1.61100074e+01, -2.78853836e-01, -3.66539001e-02, 2.04451141e-01,  8.35241356e-01],
  [ 1.61392593e-02, -2.78853836e-01,  1.03888601e+01, -1.93961716e-02, 4.23480988e-02, -2.81517067e-01],
  [ 1.27839279e-01, -3.66539001e-02, -1.93961716e-02,  1.13025449e+01, -2.16634827e-01,  3.14326859e-02],
  [-1.52301311e+00,  2.04451141e-01,  4.23480988e-02, -2.16634827e-01, 4.49147703e+01, -1.03009206e+01],
  [ 6.14675068e+01,  8.35241356e-01, -2.81517067e-01,  3.14326859e-02, -1.03009206e+01,  2.38310552e+02]])

qfi_10n_com_9p_non = np.array([[ 4.74304599e+01, -1.13386189e+00,  7.30645027e-01,  9.40460205e-02,  3.82664330e+00,  1.13707886e+00, -8.96825790e-01, -3.62439899e+00, -8.66648407e-01],
  [-1.13386189e+00,  3.52997840e+01, -1.46929928e+00,  7.79099045e-01, 1.34579498e+00,  9.60926781e-01, -1.46184807e-01,  3.54751247e+00, -1.94787750e-01],
  [ 7.30645027e-01, -1.46929928e+00,  4.01729415e+01, -1.39310455e-02, 3.79820633e-01, -1.47548912e+00, -6.15723419e-02,  1.92012775e+00, 3.12371452e+00],
  [ 9.40460205e-02,  7.79099045e-01, -1.39310455e-02,  2.59586588e+01, -4.16740227e-01, -4.14452820e-01, -2.20999908e-02,  2.58069496e-01, 4.31582489e-01],
  [ 3.82664330e+00,  1.34579498e+00,  3.79820633e-01, -4.16740227e-01, 3.51596331e+01,  1.50389160e+00, -1.06289883e+00,  1.18837967e+00, -2.90627468e+00],
  [ 1.13707886e+00,  9.60926781e-01, -1.47548912e+00, -4.14452820e-01, 1.50389160e+00,  3.55690524e+01,  8.86840019e-01,  4.59000565e+00, -3.84654541e+00],
  [-8.96825790e-01, -1.46184807e-01, -6.15723419e-02, -2.20999908e-02, -1.06289883e+00,  8.86840019e-01,  4.47709200e+01, -3.28669445e+00, 1.87021248e+00],
  [-3.62439899e+00,  3.54751247e+00,  1.92012775e+00,  2.58069496e-01, 1.18837967e+00,  4.59000565e+00, -3.28669445e+00,  2.78016797e+02, -4.65292303e+01],
  [-8.66648407e-01, -1.94787750e-01,  3.12371452e+00,  4.31582489e-01, -2.90627468e+00, -3.84654541e+00,  1.87021248e+00, -4.65292303e+01, 2.77183464e+02]])

qfi_10n_com_9p_ent = np.array([[ 4.80159908e+01, -1.08861122e-01, -6.92041016e-01, 7.50611877e-02, 3.15410995e-02,  4.17763329e-01, -1.36721073e+00,  5.50150811e+01, 5.96814575e+00],
  [-1.08861122e-01,  1.61711108e+01, -2.91248207e-01,  6.61054993e-02, -4.69198990e-02,  3.47924652e-01, -6.62823143e-01,  5.14531593e-01, 1.15231771e+01],
  [-6.92041016e-01, -2.91248207e-01,  1.60931626e+01, -9.94905853e-02, 1.67398262e-01, -3.40951920e-02,  2.32929001e-01,  9.10097122e-01, -9.15178070e-01],
  [ 7.50611877e-02,  6.61054993e-02, -9.94905853e-02,  1.05145348e+01, 4.38343430e-02, -1.21784782e-01, -2.79327164e-01,  2.93389206e-01, 1.21238441e-01],
  [ 3.15410995e-02, -4.69198990e-02,  1.67398262e-01,  4.38343430e-02, 1.18508386e+01, -4.05025482e-02,  4.17385483e-02,  1.32615776e-01, -2.59112396e-01],
  [ 4.17763329e-01,  3.47924652e-01, -3.40951920e-02, -1.21784782e-01, -4.05025482e-02,  1.18618589e+01, -8.86804199e-02,  4.16747169e-01, 2.60730171e-01],
  [-1.36721073e+00, -6.62823143e-01,  2.32929001e-01, -2.79327164e-01, 4.17385483e-02, -8.86804199e-02,  4.48060806e+01, -8.07664242e+00, -1.98650276e+00],
  [ 5.50150811e+01,  5.14531593e-01,  9.10097122e-01,  2.93389206e-01, 1.32615776e-01,  4.16747169e-01, -8.07664242e+00,  2.05743307e+02, 7.16000095e+00],
  [ 5.96814575e+00,  1.15231771e+01, -9.15178070e-01,  1.21238441e-01, -2.59112396e-01,  2.60730171e-01, -1.98650276e+00,  7.16000095e+00, 1.09819869e+02]])


# Create a list of matrices and their titles
qfi_matrices = [qfi_10n_com_3p_non, qfi_10n_com_3p_ent, qfi_10n_com_6p_non, qfi_10n_com_6p_ent, qfi_10n_com_9p_non, qfi_10n_com_9p_ent]
titles = ['QFI 3p Non', 'QFI 3p Ent', 'QFI 6p Non', 'QFI 6p Ent', 'QFI 9p Non', 'QFI 9p Ent']

# Set up the figure and axes
fig, axes = plt.subplots(3, 2, figsize=(13, 10))

# Use a single color bar for all subplots
vmin = min([matrix.min() for matrix in qfi_matrices])
vmax = max([matrix.max() for matrix in qfi_matrices])

# Plot each matrix as a heatmap
for i, ax in enumerate(axes.flat):
    sns.heatmap(qfi_matrices[i], ax=ax, annot=True, cmap='crest', linewidth=0.5, vmin=vmin, vmax=vmax, cbar=i == 0,
                cbar_ax=None if i else fig.add_axes([.91, .3, .03, .4]))
    ax.set_title(titles[i])

# Adjust layout
plt.tight_layout(rect=[0, 0, .9, 1])
plt.show()

##plt.imshow(qfi_4n_cyc_6p_ent)
##data = np.array(qfi_4n_cyc_6p_ent, dtype='float16')
##for i in range(len(qfi_4n_cyc_6p_ent)):
##  for j in range(len(qfi_4n_cyc_6p_ent)):
##      plt.annotate(str(data[i][j]), xy=(j, i), ha='center', va='center', color='white')
##plt.colorbar()

#plt.show()
