import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

qfi_4n_com_3p_non = np.array([[ 8.66359962e+00,  8.41129303e-03, -4.32473221e-01],
  [ 8.41129303e-03,  5.63193607e+00, -6.82762146e-03],
  [-4.32473221e-01, -6.82762146e-03,  5.98700035e+00]])

qfi_4n_com_3p_ent = np.array([[ 8.24123913e+00,  4.15387726e-02,  5.44087219e-02],
  [ 4.15387726e-02,  3.97407818e+00, -3.54492187e-03],
  [ 5.44087219e-02, -3.54492187e-03,  6.00573040e+00]])

qfi_4n_com_6p_non = np.array([[ 7.8477702,  -0.61720654,  0.0139595,  -1.03880909,  0.2542548,
   -0.23183609],
  [-0.61720654,  6.60193089, -0.35268433,  0.01142109,  0.05273903,
   -0.08694309],
  [ 0.0139595,  -0.35268433,  5.68778736, -0.39309204, -0.01070091,
   -0.09723797],
  [-1.03880909,  0.01142109, -0.39309204,  6.23027901, -0.3056913,
    0.44535873],
  [ 0.2542548,   0.05273903, -0.01070091, -0.3056913,   6.00344463,
   -1.21153358],
  [-0.23183609, -0.08694309, -0.09723797,  0.44535873, -1.21153358,
    8.98890846]])

qfi_4n_com_6p_ent = np.array([[ 6.89220173, -0.16913265, -0.02422588,  0.00830479, -0.24300461,
    3.52438339],
  [-0.16913265,  4.18851048,  0.17052757,  0.05873302, -0.0100547,
   -0.06641758],
  [-0.02422588,  0.17052757,  3.9852512,   0.07200546,  0.21415287,
   -0.03554028],
  [ 0.00830479,  0.05873302,  0.07200546,  3.92885933, -0.14015366,
    0.13317883],
  [-0.24300461, -0.0100547,   0.21415287, -0.14015366,  6.01417213,
   -0.57985882],
  [ 3.52438339, -0.06641758, -0.03554028,  0.13317883, -0.57985882,
    7.98049343]])

qfi_4n_com_9p_non = np.array([[ 8.48281895e+00, -3.47138252e-01,  2.72471695e-01, -3.19978333e-02, 6.01502190e-01, -8.53706360e-02,  1.88527527e-01, -8.97940063e-02,
   -2.54718323e-01],
  [-3.47138252e-01,  6.37527870e+00,  2.52879028e-01, -1.85490875e-01, 1.04175720e-01, -4.78330994e-02, -1.47042580e-01, -4.16830826e-01,
    3.37655334e-01],
  [ 2.72471695e-01,  2.52879028e-01,  6.73035789e+00, -2.63793602e-01, -2.11472321e-02, -3.88256836e-02,  1.48922386e-01,  3.02663536e-01,
    2.15761375e-01],
  [-3.19978333e-02, -1.85490875e-01, -2.63793602e-01,  5.49524307e+00, -4.07667580e-01,  2.63683701e-02, -1.89121246e-03, -5.58661652e-02,
    3.37159729e-02],
  [ 6.01502190e-01,  1.04175720e-01, -2.11472321e-02, -4.07667580e-01, 6.07075790e+00, -3.62184715e-01, -9.05202103e-02,  1.89016571e-01,
   -5.11761856e-02],
  [-8.53706360e-02, -4.78330994e-02, -3.88256836e-02,  2.63683701e-02, -3.62184715e-01,  6.51708813e+00,  4.58979874e-01,  2.28933220e-01,
    1.18421173e-02],
  [ 1.88527527e-01, -1.47042580e-01,  1.48922386e-01, -1.89121246e-03, -9.05202103e-02,  4.58979874e-01,  6.03504292e+00, -6.73888702e-01,
    3.32373199e-01],
  [-8.97940063e-02, -4.16830826e-01,  3.02663536e-01, -5.58661652e-02, 1.89016571e-01,  2.28933220e-01, -6.73888702e-01,  8.29320179e+00,
   -9.08133812e-01],
  [-2.54718323e-01,  3.37655334e-01,  2.15761375e-01,  3.37159729e-02, -5.11761856e-02,  1.18421173e-02,  3.32373199e-01, -9.08133812e-01,
    9.32625484e+00]])

qfi_4n_com_9p_ent = np.array([[ 8.00173210e+00,  1.87090149e-01, -3.79980087e-02,  1.36563568e-01,  -5.11235809e-02, -1.05697823e-01,  4.64101067e-01,  3.98170284e+00,
    1.27538712e+00],
  [ 1.87090149e-01,  4.39084183e+00,  1.45412064e-01,  3.06513214e-02,  -4.95231628e-02,  1.88835144e-03, -1.19569511e-01,  3.31394043e-01,
    1.93453335e+00],
  [-3.79980087e-02,  1.45412064e-01,  4.00748245e+00,  1.03548317e-01,  -4.24957657e-02, -5.68881989e-02,  3.77928162e-02, -2.63479729e-01,
   -7.13174820e-02],
  [ 1.36563568e-01,  3.06513214e-02,  1.03548317e-01,  3.88169907e+00,  -4.47065353e-02,  2.55312729e-02,  6.14072418e-02, -5.43635178e-02,
   -1.33608627e-02],
  [-5.11235809e-02, -4.95231628e-02, -4.24957657e-02, -4.47065353e-02,  3.80096035e+00,  3.72846603e-02, -9.29460526e-02, -3.42642212e-02,
   -4.77706528e-02],
  [-1.05697823e-01,  1.88835144e-03, -5.68881989e-02,  2.55312729e-02,  3.72846603e-02,  3.85975670e+00, -2.34151459e-02, -2.36407547e-01,
    1.49245605e-01],
  [ 4.64101067e-01, -1.19569511e-01,  3.77928162e-02,  6.14072418e-02,  -9.29460526e-02, -2.34151459e-02,  5.98862804e+00,  1.77049599e-01,
    1.61689377e-01],
  [ 3.98170284e+00,  3.31394043e-01, -2.63479729e-01, -5.43635178e-02,  -3.42642212e-02, -2.36407547e-01,  1.77049599e-01,  8.17009945e+00,
    6.43704720e-01],
  [ 1.27538712e+00,  1.93453335e+00, -7.13174820e-02, -1.33608627e-02,  -4.77706528e-02,  1.49245605e-01,  1.61689377e-01,  6.43704720e-01,
    6.54718048e+00]])


# Create a list of matrices and their titles
qfi_matrices = [qfi_4n_com_3p_non, qfi_4n_com_3p_ent, qfi_4n_com_6p_non, qfi_4n_com_6p_ent, qfi_4n_com_9p_non, qfi_4n_com_9p_ent]
titles = ['QFI 3p Non', 'QFI 3p Ent', 'QFI 6p Non', 'QFI 6p Ent', 'QFI 9p Non', 'QFI 9p Ent']

# Set up the figure and axes
fig, axes = plt.subplots(3, 2, figsize=(13, 10))

# Use a single color bar for all subplots
vmin = min([matrix.min() for matrix in qfi_matrices])
vmax = max([matrix.max() for matrix in qfi_matrices])

# Plot each matrix as a heatmap
for i, ax in enumerate(axes.flat):
    sns.heatmap(qfi_matrices[i], ax=ax, annot=True, cmap='crest', linewidth=0.5, vmin=vmin, vmax=vmax, cbar=i == 0,
                cbar_ax=None if i else fig.add_axes([.91, .3, .03, .4]))
    ax.set_title(titles[i])

# Adjust layout
plt.tight_layout(rect=[0, 0, .9, 1])
plt.show()

##plt.imshow(qfi_4n_cyc_6p_ent)
##data = np.array(qfi_4n_cyc_6p_ent, dtype='float16')
##for i in range(len(qfi_4n_cyc_6p_ent)):
##  for j in range(len(qfi_4n_cyc_6p_ent)):
##      plt.annotate(str(data[i][j]), xy=(j, i), ha='center', va='center', color='white')
##plt.colorbar()

#plt.show()
