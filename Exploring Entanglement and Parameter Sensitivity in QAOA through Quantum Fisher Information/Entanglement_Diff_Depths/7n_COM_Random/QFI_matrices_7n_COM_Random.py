import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

qfi_7n_com_6p_CYC_ENT_1D_rx = np.array([[ 9.83045425e+00,  2.92176579e+00,  1.19286873e+00, -2.84860733e+00, -9.95127640e-01,  4.84086693e+00],
                                     [ 2.92176579e+00,  1.27304603e+01,  2.21988014e+00, -1.01642494e+00, -3.33442764e+00, -3.77402790e+00],
                                     [ 1.19286873e+00,  2.21988014e+00,  1.12798645e+01,  1.06176376e-02, -4.93188515e-01, -2.59832150e+00],
                                     [-2.84860733e+00, -1.01642494e+00,  1.06176376e-02,  2.10037401e+01, 2.18358322e+00, -1.77412193e+00],
                                     [-9.95127640e-01, -3.33442764e+00, -4.93188515e-01,  2.18358322e+00, 2.39335140e+01,  1.02058783e+01],
                                     [ 4.84086693e+00, -3.77402790e+00, -2.59832150e+00, -1.77412193e+00, 1.02058783e+01,  3.91676276e+01]])

qfi_7n_com_6p_CYC_ENT_2D_rx = np.array([[ 9.6111869,   3.6770079,   1.37000999, -3.52989124, -1.33969379, 0.12890354],
                                     [ 3.6770079,  10.10664749,  3.35340492, -2.14456963, -1.9749633, -1.03091175],
                                     [ 1.37000999,  3.35340492, 10.41386337, -1.14849125, -0.76200409, -2.03023678],
                                     [-3.52989124, -2.14456963, -1.14849125, 21.07289314,  1.45446232, 0.26434589],
                                     [-1.33969379, -1.9749633,  -0.76200409,  1.45446232, 23.6513694, 3.45922855],
                                     [ 0.12890354, -1.03091175, -2.03023678,  0.26434589,  3.45922855, 22.36943768]])

qfi_7n_com_6p_CYC_ENT_3D_rx = np.array([[ 9.70586052,  3.70919731,  1.80605698, -3.44668365, -1.27165825, 0.17116482],
                                  [ 3.70919731, 10.38989265,  2.66184227, -1.88667355, -2.08819698, -1.0669643 ],
                                  [ 1.80605698,  2.66184227,  9.23348072, -0.86101788, -0.82938072, -0.94918324],
                                  [-3.44668365, -1.88667355, -0.86101788, 20.89206165,  2.39165543, 0.92069668],
                                  [-1.27165825, -2.08819698, -0.82938072,  2.39165543, 24.83804523, 4.10059536],
                                  [ 0.17116482, -1.0669643,  -0.94918324,  0.92069668,  4.10059536, 24.48951363]])

qfi_7n_com_6p_COM_ENT_1D_rx = np.array([[ 8.81250778,  2.57045734,  1.75093124, -4.3121793,   0.71173317, 5.54374069],
                                     [ 2.57045734, 13.27265984,  2.88769821, -1.46185627, -3.15095276, -3.22903263],
                                     [ 1.75093124,  2.88769821, 12.27729179, -0.9066386,  -0.85000561, -2.42189899],
                                     [-4.3121793,  -1.46185627, -0.9066386,  20.93696911,  3.52352448, -0.70428066],
                                     [ 0.71173317, -3.15095276, -0.85000561,  3.52352448, 23.18889957, 10.5986982 ],
                                     [ 5.54374069, -3.22903263, -2.42189899, -0.70428066, 10.5986982, 40.82885403]])


qfi_7n_com_6p_COM_ENT_2D_rx = np.array( [[ 9.71783432,  3.90292778,  1.47387291, -5.14240482,  0.35736633, 0.42488663],
                                      [ 3.90292778, 10.82693348,  4.19485504, -2.68416935, -2.90815968, 0.53677307],
                                      [ 1.47387291,  4.19485504, 10.26834324, -0.94969433, -0.97105816, -1.08979252],
                                      [-5.14240482, -2.68416935, -0.94969433, 20.94539932,  3.87876591, 1.32961662],
                                      [ 0.35736633, -2.90815968, -0.97105816,  3.87876591, 23.25195431, 3.63680977],
                                      [ 0.42488663,  0.53677307, -1.08979252,  1.32961662,  3.63680977, 22.86699181]])

qfi_7n_com_6p_COM_ENT_3D_rx = np.array([[ 9.42905373,  3.83360325,  1.68538971, -3.96868122,  0.70774448, 0.69032074],
                              [ 3.83360325, 10.61471214,  2.8587627,  -2.16253597, -2.65613155, 0.86404675],
                              [ 1.68538971,  2.8587627,   9.19088017, -0.74257271, -0.89784435, -1.52905956],
                              [-3.96868122, -2.16253597, -0.74257271, 21.03408764,  3.84862259, 1.515835],
                              [ 0.70774448, -2.65613155, -0.89784435,  3.84862259, 23.36684536, 3.2248798],
                              [ 0.69032074,  0.86404675, -1.52905956,  1.515835,    3.2248798, 23.22327835]])

##qfi_7n_com_2p_ent = np.array([[ 9.1401046,  -4.6185107 ],
##                              [-4.6185107,  20.82459084]])
##
##qfi_7n_com_4p_CYC_ENT = np.array([[10.10125286,  3.56584473, -3.95899761, -1.41238514],
##                                  [ 3.56584473, 10.3628685,  -2.11390312, -2.20321114],
##                                  [-3.95899761, -2.11390312, 20.80796093,  2.20366745],
##                                  [-1.41238514, -2.20321114,  2.20366745, 24.93624821]])
##
##qfi_7n_com_4p_ent = np.array([[ 8.85119884,  3.32657112, -4.2918885,   0.49245636],
##                              [ 3.32657112, 10.27173443, -1.75486687, -2.26674755],
##                              [-4.2918885,  -1.75486687, 20.72673428,  3.61842182],
##                              [ 0.49245636, -2.26674755,  3.61842182, 22.44842175]])
##
##qfi_7n_com_6p_ent = np.array([[ 9.42905373,  3.83360325,  1.68538971, -3.96868122,  0.70774448, 0.69032074],
##                              [ 3.83360325, 10.61471214,  2.8587627,  -2.16253597, -2.65613155, 0.86404675],
##                              [ 1.68538971,  2.8587627,   9.19088017, -0.74257271, -0.89784435, -1.52905956],
##                              [-3.96868122, -2.16253597, -0.74257271, 21.03408764,  3.84862259, 1.515835],
##                              [ 0.70774448, -2.65613155, -0.89784435,  3.84862259, 23.36684536, 3.2248798],
##                              [ 0.69032074,  0.86404675, -1.52905956,  1.515835,    3.2248798, 23.22327835]])
##

# Create a list of matrices and their titles
qfi_matrices = [qfi_7n_com_6p_CYC_ENT_1D_rx, qfi_7n_com_6p_COM_ENT_1D_rx, qfi_7n_com_6p_CYC_ENT_2D_rx, qfi_7n_com_6p_COM_ENT_2D_rx, qfi_7n_com_6p_CYC_ENT_3D_rx, qfi_7n_com_6p_COM_ENT_3D_rx]
titles = ['QFI CYC-ENT 1 E-S', 'QFI COM-ENT 1 E-S', 'QFI CYC-ENT 2 E-S', 'QFI COM-ENT 2 E-S', 'QFI CYC-ENT 3 E-S', 'QFI COM-ENT 3 E-S']

# Set up the figure and axes
fig, axes = plt.subplots(3, 2, figsize=(13, 10))

# Use a single color bar for all subplots
vmin = min([matrix.min() for matrix in qfi_matrices])
vmax = max([matrix.max() for matrix in qfi_matrices])

# Plot each matrix as a heatmap
for i, ax in enumerate(axes.flat):
    sns.heatmap(qfi_matrices[i], ax=ax, annot=True, cmap='crest', linewidth=0.5, vmin=vmin, vmax=vmax, cbar=i == 0,
                cbar_ax=None if i else fig.add_axes([.91, .3, .03, .4]))
    ax.set_title(titles[i])

# Adjust layout
plt.tight_layout(rect=[0, 0, .9, 1])
plt.show()

##plt.imshow(qfi_4n_cyc_6p_ent)
##data = np.array(qfi_4n_cyc_6p_ent, dtype='float16')
##for i in range(len(qfi_4n_cyc_6p_ent)):
##  for j in range(len(qfi_4n_cyc_6p_ent)):
##      plt.annotate(str(data[i][j]), xy=(j, i), ha='center', va='center', color='white')
##plt.colorbar()

#plt.show()
